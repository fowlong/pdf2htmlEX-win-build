name: build-win

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: build-win-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-win:
    runs-on: windows-latest

    steps:
      - name: Checkout (this repo)
        uses: actions/checkout@v4

      - name: Set up MSYS2 (MINGW64)
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            base-devel
            git
            ntldd
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-cairo
            mingw-w64-x86_64-freetype
            mingw-w64-x86_64-harfbuzz
            mingw-w64-x86_64-libpng
            mingw-w64-x86_64-zlib
            mingw-w64-x86_64-fontforge

      - name: Fetch pdf2htmlEX (with submodules)
        shell: msys2 {0}
        run: |
          set -euxo pipefail
          # Use an actively maintained mirror of the 0.18.x line
          PDF2HTMLEX_REPO=https://github.com/pdf2htmlEX/pdf2htmlEX.git
          PDF2HTMLEX_REF=0.18.7
          git clone --depth 1 --branch "$PDF2HTMLEX_REF" --recurse-submodules "$PDF2HTMLEX_REPO" src
          ( cd src && git submodule update --init --recursive )
          test -f src/CMakeLists.txt
          test -f src/3rdparty/poppler/git/CairoOutputDev.cc

      - name: Configure (CMake)
        shell: msys2 {0}
        working-directory: src
        run: |
          set -euxo pipefail
          rm -rf build && mkdir build && cd build
          cmake -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_CXX_STANDARD=14 \
            -DENABLE_SVG=ON \
            ..
          cmake --build . --target help | sed -n '1,200p'

      - name: Build pdf2htmlEX target
        shell: msys2 {0}
        working-directory: src/build
        run: |
          set -euxo pipefail
          ninja -v pdf2htmlEX
          ls -l src || true
          ls -l src/pdf2htmlEX.exe

      - name: Package portable bundle
        shell: msys2 {0}
        run: |
          set -euxo pipefail
          OUT="$GITHUB_WORKSPACE/out"
          mkdir -p "$OUT/bin"

          # main binary
          cp -v "$GITHUB_WORKSPACE/src/build/src/pdf2htmlEX.exe" "$OUT/bin/"

          # optional helpers (if present)
          cp -v /mingw64/bin/pdfinfo.exe    "$OUT/bin/" || true
          cp -v /mingw64/bin/pdftocairo.exe "$OUT/bin/" || true
          cp -v /mingw64/bin/pdftoppm.exe   "$OUT/bin/" || true

          # poppler shared data (if present)
          if [ -d /mingw64/share/poppler ]; then
            mkdir -p "$OUT/share"
            cp -a /mingw64/share/poppler "$OUT/share/"
          fi

          # find ntldd reliably
          NTLDD_BIN="$(command -v ntldd || true)"
          [ -z "$NTLDD_BIN" ] && NTLDD_BIN="/usr/bin/ntldd"

          # copy DLL deps
          copy_deps () { "$NTLDD_BIN" -R "$1" | awk '/mingw64\/bin/ {print $3}' | xargs -r -I{} cp -u "{}" "$OUT/bin/"; }
          copy_deps "$OUT/bin/pdf2htmlEX.exe"
          for e in "$OUT/bin/"pdf{info,tocairo,toppm}.exe; do [ -f "$e" ] && copy_deps "$e"; done
          for dll in /mingw64/bin/libstdc++-6.dll /mingw64/bin/libgcc_s_seh-1.dll /mingw64/bin/libwinpthread-1.dll; do
            [ -f "$dll" ] && cp -u "$dll" "$OUT/bin/" || true
          done

          # verify
          [ -x "$OUT/bin/pdf2htmlEX.exe" ] || (echo "::error ::pdf2htmlEX.exe missing after build" && exit 1)

          # BUILD-INFO
          cat > "$OUT/BUILD-INFO" <<EOF
          run=${{ github.run_number }}
          commit=${{ github.sha }}
          date_utc=$(date -u +%Y-%m-%dT%H:%M:%SZ)
          runner=${{ runner.os }} (${MSYSTEM})
          poppler=$(pkg-config --modversion poppler || true)
          cairo=$(pkg-config --modversion cairo || true)
          freetype=$(pkg-config --modversion freetype2 || true)
          harfbuzz=$(pkg-config --modversion harfbuzz || true)
          EOF

          7z a -bd -tzip "$GITHUB_WORKSPACE/pdf2htmlEX-win64-${{ github.run_number }}.zip" "$OUT"/*

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: pdf2htmlEX-win64
          path: pdf2htmlEX-win64-*.zip

      - name: Release (pre-release)
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}
          prerelease: true
          files: pdf2htmlEX-win64-*.zip

      - name: Upload build logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            src/build/CMakeFiles
            src/build/*.ninja
            src/build/**/*.log
