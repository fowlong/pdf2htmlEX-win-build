name: build-win

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - '.github/ISSUE_TEMPLATE/**'
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: build-win-${{ github.ref }}
  cancel-in-progress: true

env:
  TGT: x86_64-w64-mingw32.static
  MXE_DIR: ${{ github.workspace }}/mxe
  OUT_DIR: ${{ github.workspace }}/out
  P2H_BRANCH: v0.18.7-poppler-0.81.0

jobs:
  build-win:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Install build deps
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential automake autoconf libtool libtool-bin pkg-config \
            intltool gettext autopoint gperf \
            git curl wget ca-certificates \
            lzip p7zip-full xz-utils zip unzip \
            python3 python3-mako ruby \
            texinfo cmake ninja-build

      - name: Prep dirs
        run: |
          set -eux
          mkdir -p "$OUT_DIR" "$MXE_DIR"

      - name: Cache MXE (usr/pkg/tools)
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.MXE_DIR }}/usr
            ${{ env.MXE_DIR }}/pkg
            ${{ env.MXE_DIR }}/tools
          key: mxe-usr-${{ runner.os }}-v1

      - name: Fetch MXE
        run: |
          set -eux
          if [ ! -d "$MXE_DIR/.git" ]; then
            git clone --depth=1 https://github.com/mxe/mxe.git "$MXE_DIR"
          fi

      - name: Build MXE toolchain (cc)
        run: |
          set -eux
          cd "$MXE_DIR"
          unset WGETRC || true
          make -j1 cc MXE_TARGETS=$TGT

      - name: Build libraries needed by pdf2htmlEX
        run: |
          set -eux
          cd "$MXE_DIR"
          for p in zlib libpng jpeg tiff lcms openjpeg icu4c freetype harfbuzz cairo; do
            make -j1 "$p" MXE_TARGETS=$TGT || make -j1 "$p" MXE_TARGETS=$TGT
          done
          # Attempt fontforge only if MXE provides a rule; don't fail if missing
          ( make -j1 fontforge MXE_TARGETS=$TGT ) || echo "Skipping fontforge: no MXE rule."

      # TODO: add your actual pdf2htmlEX build + packaging here, writing into $OUT_DIR
      - name: Pack artifacts (placeholder)
        run: |
          set -eux
          echo "Put your packaging steps here and place outputs under $OUT_DIR"
          mkdir -p "$OUT_DIR"
          echo "build stamp $(date -u +%Y-%m-%dT%H:%M:%SZ)" > "$OUT_DIR/BUILD-INFO.txt"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: win-build
          path: ${{ env.OUT_DIR }}
          if-no-files-found: error
