name: Cross-compile pdf2htmlEX for Windows (x86_64 static)

on:
  push:
  pull_request:

jobs:
  build-windows:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Install ALL MXE host-side requirements that were missing in your run,
      # plus typical extras MXE/glib builds may use.
      - name: Install host build tools (MXE reqs)
        run: |
          set -eux
          sudo apt-get update
          sudo apt-get install -y \
            # core build chain
            build-essential autoconf automake libtool libtool-bin make \
            g++ gperf bison flex pkg-config cmake ninja-build \
            # MXE check-requirements wants these:
            gettext autopoint intltool libxml-parser-perl lzip \
            python3 python3-pip python3-setuptools python3-wheel python3-mako \
            gawk sed gperf \
            # gdk-pixbuf-csource lives in these dev/bin packages
            libgdk-pixbuf2.0-dev gdk-pixbuf2.0-bin \
            # helpful for glib tool scripts
            glib2.0-bin libglib2.0-dev-bin \
            # misc tools
            wget unzip p7zip-full xz-utils file zip

      - name: Fetch MXE
        run: |
          set -eux
          git clone https://github.com/mxe/mxe.git

      # Build only what we need from MXE. Do NOT request 'fontforge' (MXE dropped it).
      - name: Build MXE toolchain & libs (x86_64 static)
        working-directory: mxe
        run: |
          set -eux
          # This will also build MXE's transitive deps (harfbuzz, cairo, freetype, jpeg, png, tiff, zlib, openjpeg, etc.)
          make MXE_TARGETS='x86_64-w64-mingw32.static' poppler -j"$(nproc)"

      # Build the community fork without FontForge; it supports the no-FontForge path.
      - name: Build pdf2htmlEX (no FontForge, 64-bit static)
        env:
          CROSS: x86_64-w64-mingw32.static
        run: |
          set -eux
          export PATH="${GITHUB_WORKSPACE}/mxe/usr/bin:${PATH}"

          # Clone recursively in case the repo uses submodules
          git clone --recursive https://github.com/pdf2htmlEX/pdf2htmlEX.git pdf2htmlEX-src
          cd pdf2htmlEX-src

          mkdir build && cd build
          cmake .. \
            -G Ninja \
            -DCMAKE_TOOLCHAIN_FILE="${GITHUB_WORKSPACE}/mxe/usr/${CROSS}/share/cmake/mxe-conf.cmake" \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX="${GITHUB_WORKSPACE}/pdf2htmlEX-install" \
            -DENABLE_FONTFORGE=OFF \
            -DENABLE_LIBFONTFORGE=OFF \
            -DENABLE_FONTFORGE_EXE=OFF

          ninja pdf2htmlEX

          mkdir -p "${GITHUB_WORKSPACE}/artifact"
          cp src/pdf2htmlEX.exe "${GITHUB_WORKSPACE}/artifact/"

      - name: Verify 64-bit EXE
        run: |
          set -eux
          file artifact/pdf2htmlEX.exe || true
          echo "::group::objdump header"
          "${GITHUB_WORKSPACE}/mxe/usr/bin/x86_64-w64-mingw32.static-objdump" -f artifact/pdf2htmlEX.exe || true
          echo "::endgroup::"

      - name: Zip artifact
        run: |
          set -eux
          cd artifact
          zip -9r ../pdf2htmlEX-windows-x86_64-static.zip pdf2htmlEX.exe

      - name: Upload Windows binary
        uses: actions/upload-artifact@v4
        with:
          name: pdf2htmlEX-windows-x86_64-static
          path: |
            artifact/pdf2htmlEX.exe
            pdf2htmlEX-windows-x86_64-static.zip
