name: build-pdf2htmlex-windows-x64

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  build-windows-x64:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up MSYS2 (UCRT64)
        uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64  # MSYS2 recommends UCRT64 if unsure
          update: true
          install: >-
            mingw-w64-ucrt-x86_64-toolchain
            mingw-w64-ucrt-x86_64-cmake
            mingw-w64-ucrt-x86_64-ninja
            mingw-w64-ucrt-x86_64-pkg-config
            mingw-w64-ucrt-x86_64-poppler
            mingw-w64-ucrt-x86_64-poppler-data
            mingw-w64-ucrt-x86_64-cairo
            mingw-w64-ucrt-x86_64-fontforge
            mingw-w64-ucrt-x86_64-libspiro
            mingw-w64-ucrt-x86_64-libjpeg-turbo
            mingw-w64-ucrt-x86_64-libpng
            mingw-w64-ucrt-x86_64-freetype
            mingw-w64-ucrt-x86_64-fontconfig
            mingw-w64-ucrt-x86_64-libxml2
            mingw-w64-ucrt-x86_64-ntldd

      - name: Configure (CMake + Ninja)
        shell: msys2 {0}
        env:
          PKG_CONFIG_PATH: /ucrt64/lib/pkgconfig:/ucrt64/share/pkgconfig
        run: |
          # The CMakeLists.txt that defines pdf2htmlEX is in the subfolder "pdf2htmlEX"
          cmake -S pdf2htmlEX -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_PREFIX_PATH=/ucrt64 \
            -DCMAKE_INSTALL_PREFIX="${GITHUB_WORKSPACE}/_install"

      - name: Build
        shell: msys2 {0}
        run: |
          cmake --build build --config Release -j 2

      - name: Install to staging
        shell: msys2 {0}
        run: |
          cmake --install build --prefix "${GITHUB_WORKSPACE}/_install"

      - name: Bundle exe + runtime DLLs + resources
        shell: msys2 {0}
        run: |
          set -euo pipefail
          mkdir -p dist/bin dist/share

          EXE="${GITHUB_WORKSPACE}/_install/bin/pdf2htmlEX.exe"
          if [ ! -f "$EXE" ]; then
            echo "pdf2htmlEX.exe not found at $EXE";
            find "${GITHUB_WORKSPACE}/_install" -maxdepth 4 -type f -iname 'pdf2htmlEX*.exe' | sed 's|^|  |'
            exit 1
          fi

          # Copy the exe
          cp "$EXE" dist/bin/

          # Copy dependent DLLs from /ucrt64/bin (or /mingw64/bin if you switch envs)
          pushd dist/bin >/dev/null
          ntldd -R "$(basename "$EXE")" \
            | awk '/\/(ucrt64|mingw64)\// {print $3}' \
            | xargs -I{} cp -u {} .
          popd >/dev/null

          # Copy app resources installed by `cmake --install`
          if [ -d "${GITHUB_WORKSPACE}/_install/share/pdf2htmlEX" ]; then
            mkdir -p dist/share/pdf2htmlEX
            cp -r "${GITHUB_WORKSPACE}/_install/share/pdf2htmlEX/"* dist/share/pdf2htmlEX/
          fi

          # Copy poppler-data (cmaps, etc.) used by poppler
          if [ -d /ucrt64/share/poppler ]; then
            mkdir -p dist/share/poppler
            cp -r /ucrt64/share/poppler/* dist/share/poppler/ || true
          elif [ -d /mingw64/share/poppler ]; then
            mkdir -p dist/share/poppler
            cp -r /mingw64/share/poppler/* dist/share/poppler/ || true
          fi

          # Package everything as a single ZIP
          7z a -tzip "${GITHUB_WORKSPACE}/pdf2htmlEX-windows-x64.zip" ./dist/*

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: pdf2htmlEX-windows-x64
          path: pdf2htmlEX-windows-x64.zip

      - name: Create GitHub Release (on tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: pdf2htmlEX-windows-x64.zip
          generate_release_notes: true

# Notes:
# - Your previous failure was due to requesting a non-existent package name `poppler-data`.
#   On MSYS2, use the MinGW/UCRT-prefixed package: `mingw-w64-ucrt-x86_64-poppler-data`.
# - If you prefer the classic MSVCRT-based MinGW (MINGW64) environment, change `msystem: MINGW64`
#   and swap package prefixes from `mingw-w64-ucrt-x86_64-` to `mingw-w64-x86_64-`.
# - The bundling step now copies DLLs from either UCRT64 or MINGW64 automatically and includes
#   pdf2htmlEX/share resources plus Poppler's data files so the binary works out-of-the-box.
